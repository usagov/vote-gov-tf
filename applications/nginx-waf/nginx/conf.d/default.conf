map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $request_uri $error_page {
  default /404/index.html;
  ~/(?<lang>[a-z][a-z]?[a-z]|zh-hans)/(.*) /$lang/404/index.html;
}

geo $allow_ips {
  default deny;
  include nginx/snippets/allowed-ips.conf;
}

map $http_origin $cors_allow_origin {
  default "";
  ~^https?://(.*\.)?vote.gov(:\d*)?$ $http_origin;
  ~^http://localhost(:\d*)?$ $http_origin;
  ~^https?://vote-gov.lndo.site(:\d*)?$ $http_origin;
  ~^https?://(.*\.)sites.pages.cloud.gov(:\d*)?$ $http_origin;
}

server {
    server_name _;
    listen $VCAP_APP_PORT;
    include nginx/snippets/tls-settings.conf;

    modsecurity on;
    modsecurity_rules_file /home/vcap/app/nginx/snippets/owasp-modsecurity-main.conf;

    if ($allow_ips = deny) {
      set $port 8884;
      break;
    }

    set $cf_forwarded_host "$host";
    #if ($http_x_cf_forwarded_url ~* ^(https?\:\/\/)(.*?)(\/(.*))?$) {
    #    set $cf_forwarded_host "$2";
    #}

    set $port 8881;
    if ($cf_forwarded_host ~* ^cms) {
      set $port 8882;
    }

    location @fourohfour_english {
      allow all;
      access_log off;
      internal;

      rewrite ^ /404/index.html;
      include nginx/snippets/proxy-to-static.conf;
      break;
    }

    location ^~ /s3/files {
      set $port 8883;
      proxy_redirect off;
      proxy_connect_timeout 300;
      chunked_transfer_encoding off;
      proxy_pass http://127.0.0.1:$port;
      proxy_cookie_flags ~SESS.* secure;
      proxy_set_header Host $cf_forwarded_host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
      error_page 403 =404 @fourohfour_english;
    }

    location / {
      proxy_redirect off;
      proxy_connect_timeout 300;
      chunked_transfer_encoding off;
      proxy_pass http://127.0.0.1:$port;
      proxy_cookie_flags ~SESS.* secure;
      proxy_set_header Host $cf_forwarded_host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
      error_page 403 =404 @fourohfour_english;
    }
}

# SSG
server {
  server_name 127.0.0.1;
  listen 8881;

  include nginx/snippets/x-security.conf;

  location @fourohfour {
    allow all;
    access_log off;
    internal;

    rewrite ^ $error_page;
    include nginx/snippets/proxy-to-static.conf;
  }

  location /nvrf/assets/ {
    add_header 'Access-Control-Allow-Origin' $cors_allow_origin always;
    add_header 'Access-Control-Allow-Methods' 'GET' always;

    include nginx/snippets/proxy-to-static.conf;
    error_page 403 =404 @fourohfour;
    break;
  }

  location / {
    rewrite ^([^.]*[^/])$ $1/;
    rewrite (.*)/$ $1/index.html last;

    include nginx/snippets/proxy-to-static.conf;
    error_page 403 =404 @fourohfour;
  }
}

# CMS
server {
  server_name 127.0.0.1;
  listen 8882;

  include nginx/snippets/x-security.conf;

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location ~ \..*/.*\.php$ {
    return 403;
  }

  location ~ ^/sites/.*/private/ {
    return 403;
  }

  # Block access to scripts in site files directory
  location ~ ^/sites/[^/]+/files/.*\.php$ {
    deny all;
  }

  # Allow "Well-Known URIs" as per RFC 5785
  location ~* ^/.well-known/ {
    allow all;
  }

  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
    return 403;
  }

  # Protect files and directories from prying eyes.
  location ~* \.(?:engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(?:\.php)?|xtmpl|yml)(?:~|\.sw[op]|\.bak|\.orig|\.save)?(?:$|/) {
    deny all;
    return 404;
  }

  location ~* ^/(\.(?!well-known/).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock))(?:/|$)|^/#.*#(?:/|$)|\.php(?:~|\.sw[op]|\.bak|\.orig|\.save)(?:/|$) {
    deny all;
    return 404;
  }
  
  # Add patterns here to block files located anywhere in the site.
  location ~* /README\.md {
    deny all;
    return 404;
  }

  location ~* ^/(update\.php|test\.txt|README\.md|LICENSE\.txt|install\.php|INSTALL(\..*?)?\.txt)(?:/|$) {
    deny all;
    return 404;
  }

  # Don't allow access to generated php files.
  location = /sites/default/files/php {
    deny all;
    return 404;
  }

  location ^~ /sites/default/files/php/ {
    deny all;
    return 404;
  }

  location ^~ /vendor/ {
    deny all;
    return 404;
  }

  location ~* /autoload.php {
    deny all;
    return 404;
  }

  #Dont allow direct access to *.(css|js).gz files.
  location ~ /sites/default/files/(css/.*\.css|js/.*\.js)\.gz(?:/|$) {
    deny all;
    return 404;
  }

  location @rewrite {
    rewrite ^ /index.php;
    include nginx/snippets/proxy-to-app.conf;
  }

  #Required by Drupal/S3FS Module
  #Proxy request for image styles to CMS
  location ~ /s3/files/styles/ {
    try_files $uri @rewrite;
    include nginx/snippets/proxy-to-app.conf;
  }

  location / {
    access_log on;
    rewrite_log on;
    include nginx/snippets/proxy-to-app.conf;
  }
}

# CMS Files
server {
  server_name 127.0.0.1;
  listen 8883;

  #Rewrite all s3 file requests to cms path.
  #Location blocks below will handle the rest.
  rewrite ^/s3/files/(.*)$ /cms/public/$1 break;

  location @fourohfour {
    allow all;
    access_log off;
    internal;

    rewrite ^ $error_page;
    include nginx/snippets/proxy-to-static.conf;
  }

  location @cmsimagestylerewrite {
    #Setting $cf_fowarded_host within the location block
    #oppose to outside makes it available to the conditional
    #check below.
    set $cf_forwarded_host "$host";
    #If the forwarding host is not from the CMS then return a 403 page.
    if ($cf_forwarded_host !~* ^cms) {
      error_page 403 =404 @fourohfour;
      return 403;
    }

    #Let's forward the request to the CMS to allow it to handle processing any
    #image styles.
    set $port 8882;
    proxy_redirect off;
    proxy_connect_timeout 300;
    chunked_transfer_encoding off;
    #Add the original $request_uri to ensure it registers with the
    #CMS defined controller in the s3fs module.
    proxy_pass http://127.0.0.1:$port$request_uri;
    proxy_cookie_flags ~SESS.* secure;
    proxy_set_header Host $cf_forwarded_host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Real-IP $remote_addr;
    error_page 403 =404 @fourohfour;
  }

  #Try to serve up any available image styles
  #directly from the S3 bucket.
  location ~ /cms/public/styles/ {
    include nginx/snippets/proxy-to-storage.conf;
    #Redirect 403 errors to the specified location block
    #for further handling. Using try_files for S3 just didn't
    #work out.
    error_page 403 = @cmsimagestylerewrite;
  }

  location / {
    include nginx/snippets/proxy-to-storage.conf;
    error_page 403 =404 @fourohfour;
  }
}

# 403 forbidden only page
server {
  server_name 127.0.0.1;
  listen 8884;

  location /forbidden {
    allow all;
    access_log off;

    default_type text/plain;
    return 403 'Forbidden by VoteGov';
    break;
  }

  location / {
    allow all;
    access_log off;

    rewrite ^ /forbidden last;
  }
}
